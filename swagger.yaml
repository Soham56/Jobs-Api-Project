openapi: 3.0.0
info:
  title: Jobs-Api-Project
  contact: {}
  version: '1.0'
servers:
  - url: https://jobs-api-project-9eau.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register Route
      operationId: registerRoute
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerRouteRequest'
            example:
              name: Your Name
              email: yourEmail@email.com
              password: yourSecretPassword
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login Route
      operationId: loginRoute
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRouteRequest'
            example:
              email: yourEmail@email.com
              password: yourSecretPassword
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createJobRequest'
            example:
              company: company_name
              position: job_position_name
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: updateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateJobRequest'
            example:
              company: updated_company_name
              position: updated_job_position
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    updateJobRequest:
      title: updateJobRequest
      required:
        - company
        - position
        - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      examples:
        company: updated_company_name
        position: updated_job_position
        status: interview
    createJobRequest:
      title: createJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      examples:
        company: company_name
        position: job_position_name
    registerRouteRequest:
      title: registerRouteRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      examples:
        name: Your Name
        email: yourEmail@email.com
        password: yourSecretPassword
    loginRouteRequest:
      title: loginRouteRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      examples:
        email: yourEmail@email.com
        password: yourSecretPassword
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Jobs
    description: ''
  - name: Auth
    description: ''